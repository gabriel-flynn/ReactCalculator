{"version":3,"sources":["Calculator.js","Display.js","Buttons.js","serviceWorker.js","index.js"],"names":["Calculator","props","signs","handleNumDecimal","event","display","state","equation","length","target","value","isSolved","setState","includes","handleClear","handleSign","substr","slice","handleKey","key","e","keyCode","shiftKey","handleEqual","this","eval","SyntaxError","handleEventType","handleKeys","onKeyEvent","bind","className","number","clear","sign","equals","React","Component","Display","id","style","marginBottom","fontSize","Buttons","onClick","height","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.07aadf91.chunk.js","sourcesContent":["import React from 'react';\nimport Display from './Display.js'\nimport Buttons from './Buttons.js'\nimport './Calculator.css'\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\n//Need to add support for +- *- /- \nclass Calculator extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      display: '0',\n      equation: '0',\n      isSolved: false\n    }\n  }\n\n  signs = ['/','*', '+', '-'];\n\n  handleEqual() {\n    this.setState((state) => {\n      if(!state.isSolved)\n      {\n        let equation =state.equation.slice();\n        let display = '';\n        if(this.signs.includes(equation.substr(equation.length -1)))\n        {\n          equation = equation.slice(0, -1);\n        }\n        try {\n          display = eval(equation);\n      } catch (e) {\n          if (e instanceof SyntaxError) {\n              return{display: 'NaN', equation:'NaN'}\n          }\n      }\n          equation+= '=' + display;\n          return{display: display, equation: equation, isSolved: true}\n      }\n      return state;\n    })\n    \n  }\n\n\n  handleNumDecimal = (event) => {\n      let display = this.state.display;\n      let equation = this.state.equation;\n      //Don't let user input more numbers if screen if full\n      if(this.state.display.length === 29) {\n          return;\n      }\n      //handle decimals\n      if(event.target.value === '.')\n      {\n        if(!(\"\"+this.state.display).includes('.') && !this.signs.includes(this.state.display))\n        {\n          this.setState({equation: this.state.equation + event.target.value, display: this.state.display + event.target.value, isSolved: false})\n        }\n        return;\n      }\n      //If calculator is at [expr] = number, reset the screen display on next input\n      if(this.state.isSolved === true)\n      {\n        this.setState({equation: event.target.value, display: event.target.value, isSolved: false})\n        return;\n      }\n      //If display has '0', replace display. Don't make it 05, 01, 02, etc.\n      if(display === '0'){\n        if(event.target.value === '.'){\n          this.setState({display: '0' + event.target.value, equation: '0' + event.target.value})\n        }else {\n        this.setState({display: event.target.value, equation: event.target.value})\n        }\n      }\n      //If display has a sign, replace it with the new number input and add sign to equation\n      else if(this.signs.includes(display) ) {\n          this.setState({display:event.target.value, equation: equation + event.target.value})\n      }else{\n        this.setState({ display: this.state.display + event.target.value, equation: this.state.equation + event.target.value});\n      }\n  }\n\n  handleClear = () => {\n      this.setState({display: '0', equation: '0'})\n  }\n\n  handleSign = (event) => {\n    //If equation is number = number (ex. 5=5) replace input with number[sign](ex. 5/)\n    if(this.state.isSolved === true)\n    {\n      this.setState({display: event.target.value, equation: this.state.display + event.target.value, isSolved: false})\n      return;\n    }\n\n    //If the previous input was a number, concat the sign to the equation and update display\n    if(!this.signs.includes(this.state.display))\n    {\n      if(this.state.equation === '0'){\n        this.setState({equation: ''});\n      }\n      this.setState({display:event.target.value, equation:this.state.equation + event.target.value});\n    }\n    //Otherwise the previous input was a sign so replace it with the new sign(unless it's a minus)\n    else{\n      if(this.state.display !== '-' && event.target.value === '-')\n      {\n        this.setState({display:event.target.value, equation:this.state.equation + event.target.value});\n      }else if(this.state.display === '-' && this.signs.includes(this.state.equation.substr(-2,1))){\n        this.setState({display:event.target.value, equation: this.state.equation.slice(0, -2) + event.target.value})\n      } else{\n        this.setState({display:event.target.value, equation: this.state.equation.slice(0, -1) + event.target.value})\n      }\n    }\n  }\n\n  handleKey = (key, e) =>\n  {\n    if(e.keyCode === 190 || (e.keyCode >= 48 && e.keyCode <= 57 && !e.shiftKey))\n    {\n      this.handleNumDecimal({target:{value:e.key}});\n    } else if(((e.keyCode === 56 || e.keyCode === 61) && e.shiftKey) || (e.keyCode === 173 || e.keyCode === 191))\n    {\n      if(e.keyCode === 191)\n      {\n        e = {key: '/'}\n      }\n      this.handleSign({target:{value:e.key}})\n    }else if( e.keyCode === 61 || e.keyCode === 13) {\n      this.handleEqual()\n    } else {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return(\n      <KeyboardEventHandler\n        handleEventType={\"keyup\"}\n        handleKeys={['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'shift+8', 'shift+/', '/', 'shift+=', '-', '=', 'shift+=', 'c', 'enter']}\n        onKeyEvent={this.handleKey.bind(this)}>\n            \n        <div className=\"container bg-dark\">\n          <Display display={this.state.display} equation={this.state.equation}/>\n          <Buttons number={this.handleNumDecimal.bind(this)}\n            clear={this.handleClear.bind(this)}\n            sign={this.handleSign.bind(this)}\n            equals={this.handleEqual.bind(this)}/>\n      </div>\n      </KeyboardEventHandler>\n            \n    )\n  }\n}\nexport default Calculator;\n","import React from 'react';\nimport './Display.css';\nconst Display = (props) => (\n    <div id=\"display\" className=\"container-fluid p-0\" >\n        <div className=\"col-12 bg-info rounded\">\n            <div className=\"row\" style={{marginBottom: \"-.75rem\"}}>\n                <div className=\"ml-auto\">\n                    <p style={{fontSize: \"12px\"}}>{props.equation.substr(-49)}</p>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"ml-auto\">\n                    <h5>{\"\" + props.display}</h5>\n                </div>\n            </div>\n        </div>\n    </div>\n)\n\nexport default Display;","import React from 'react';\nimport './Buttons.css';\n\nconst Buttons = (props) =>(\n    <div className=\"container-fluid\">\n        <div className=\"row\">\n            <div className=\"col-6 p-0\">\n                <button id=\"clear\" onClick={props.clear} className=\"btn btn-danger btn-block border border-dark\" >AC</button>\n            </div>\n            <div className=\"col-3 p-0\">\n                <button id=\"divide\" value=\"/\" onClick={props.sign} className=\"btn btn-light btn-block border border-dark\">/</button>\n            </div>\n            <div className=\"col-3 p-0\">\n                <button id=\"multiply\" value=\"*\" onClick={props.sign} className=\"btn btn-light btn-block border border-dark\">*</button>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-3 p-0\">\n                <button id=\"7\" value=\"7\" onClick={props.number} className=\"btn btn-secondary btn-block border border-dark\" >7</button>\n            </div>\n            <div className=\"col-3 p-0\">\n                <button id=\"8\" value=\"8\" onClick={props.number} className=\"btn btn-secondary btn-block border border-dark\" >8</button>\n            </div>\n            <div className=\"col-3 p-0\">\n                <button id=\"9\" value=\"9\" onClick={props.number} className=\"btn btn-secondary btn-block border border-dark\">9</button>\n            </div>\n            <div className=\"col-3 p-0\">\n                <button id=\"subtract\" value=\"-\" onClick={props.sign} className=\"btn btn-light btn-block border border-dark\">-</button>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-3 p-0\">\n                <button id=\"4\" value=\"4\" onClick={props.number}  className=\"btn btn-secondary btn-block border border-dark\" >4</button>\n            </div>\n            <div className=\"col-3 p-0\">\n                <button id=\"5\" value=\"5\" onClick={props.number} className=\"btn btn-secondary btn-block border border-dark\" >5</button>\n            </div>\n            <div className=\"col-3 p-0\">\n                <button id=\"6\" value=\"6\" onClick={props.number} className=\"btn btn-secondary btn-block border border-dark\">6</button>\n            </div>\n            <div className=\"col-3 p-0\">\n                <button id=\"add\" value=\"+\" onClick={props.sign} className=\"btn btn-light btn-block border border-dark\">+</button>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-9\">\n                <div className=\"row\">\n                    <div className=\"col-4 p-0\">\n                        <button id=\"1\" value=\"1\" onClick={props.number} className=\"btn btn-secondary btn-block border border-dark\" >1</button>\n                    </div>\n                    <div className=\"col-4 p-0\">\n                        <button id=\"2\" value=\"2\" onClick={props.number} className=\"btn btn-secondary btn-block border border-dark\" >2</button>\n                    </div>\n                    <div className=\"col-4 p-0\">\n                        <button id=\"3\" value=\"3\" onClick={props.number} className=\"btn btn-secondary btn-block border border-dark\">3</button>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-8 p-0\">\n                        <button id=\"0\" value=\"0\" onClick={props.number} className=\"btn btn-secondary btn-block border border-dark\" >0</button>\n                    </div>\n                    <div className=\"col-4 p-0\">\n                        <button id=\"decimal\" value=\".\" onClick={props.number} className=\"btn btn-secondary btn-block border border-dark\" >.</button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-3 p-0\">\n                <button id=\"equals\" onClick={props.equals}className=\"btn btn-success btn-block border border-dark\" style={{height: \"100%\"}}>=</button>\n            </div>\n        </div>\n    </div>\n)\n\nexport default Buttons;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calculator from './Calculator.js'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n        <Calculator />\n        , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}